<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Project:</h2>
G:\iCore\demo\stm32\demo.uvproj
Project File Date:  06/08/2013

<h2>Output:</h2>
Build target 'demo'
assembling startup_stm32f10x_hd.s...
compiling rcc.c...
compiling usart.c...
compiling cdrvbxcan.c...
driver\cdrvbxcan.c(31): error:  #5: cannot open source input file "cdrvinc.h": No such file or directory
driver\cdrvbxcan.c:   #include "cdrvinc.h"
driver\cdrvbxcan.c:                       ^
driver\cdrvbxcan.c: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
driver\target.c(32): error:  #5: cannot open source input file "cdrvinc.h": No such file or directory
driver\target.c:   #include "cdrvinc.h"
driver\target.c:                       ^
driver\target.c: driver\target.c: 0 warnings, 1 error
compiling main.c...
main\main.c(21): error:  #5: cannot open source input file "..\include\terminal.h": No such file or directory
main\main.c:   #include "..\include\terminal.h"
main\main.c:                                   ^
main\main.c: main\main.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling cdrvbxcan.c...
driver\cdrvbxcan.c(71): error:  #35: #error directive: 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:       #error 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:        ^
driver\cdrvbxcan.c: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
driver\target.c(102): error:  #70: incomplete type is not allowed
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:        ^
driver\target.c(102): error:  #65: expected a ";"
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:               ^
driver\target.c(314): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   } tGPIOSpeedDef;
driver\target.c:                  ^
driver\target.c(333): error:  #20: identifier "WORD" is undefined
driver\target.c:       WORD m_GPIO_Pin;
driver\target.c:       ^
driver\target.c(337): error:  #20: identifier "tGPIOSpeedDef" is undefined
driver\target.c:       tGPIOSpeedDef m_GPIO_Speed;
driver\target.c:       ^
driver\target.c(355): error:  #20: identifier "DWORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                     ^
driver\target.c(355): error:  #20: identifier "WORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                                       ^
driver\target.c(377): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitCanIsr (void)
driver\target.c:               ^
driver\target.c(399): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                                                  ^
driver\target.c(402): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:           ^
driver\target.c(402): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:                             ^
driver\target.c(403): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:           ^
driver\target.c(403): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:                             ^
driver\target.c(404): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:           ^
driver\target.c(404): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:                             ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                       ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                              ^
driver\target.c(405): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(405): error:  #147: declaration is incompatible with "void TgtGPIOInit(GPIO_TypeDef *, tGPIOInit *)" (declared at line 354)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(409): error:  #18: expected a ")"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #79: expected a type specifier
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #101: "RCC_TypeDef" has already been declared in the current scope
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #141-D: unnamed prototyped parameters not allowed when body is present
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #130: expected a "{"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:              ^
driver\target.c(449): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:       }
driver\target.c:       ^
driver\target.c(522): error:  #169: expected a declaration
driver\target.c:   }
driver\target.c:   ^
driver\target.c(823): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   static tTime NEAR TimerValue_g;
driver\target.c:                                 ^
driver\target.c(848): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitTimer (void)
driver\target.c:               ^
driver\target.c(1158): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:               currentpin = (GPIOInit_p->m_GPIO_Pin) & pos;
driver\target.c:                                                          ^
driver\target.c(1159): error:  #169: expected a declaration
driver\target.c:               if (currentpin == pos)
driver\target.c:               ^
driver\target.c(1186): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRL = tmpreg;
driver\target.c:                                ^
driver\target.c(1187): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1214): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:                       GPIOx_p->BRR = (((DWORD)0x01) << (pinpos + 0x08));
driver\target.c:                                                                        ^
driver\target.c(1215): error:  #169: expected a declaration
driver\target.c:                   }
driver\target.c:                   ^
driver\target.c(1224): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRH = tmpreg;
driver\target.c:                                ^
driver\target.c(1225): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1309): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           tmp1 = ((DWORD)0x03) << tmpmask;
driver\target.c:                                          ^
driver\target.c(1310): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           tmpreg &= ~tmp1;
driver\target.c:           ^
driver\target.c: driver\target.c: 9 warnings, 30 errors
compiling main.c...
main\main.c(21): error:  #5: cannot open source input file "..\include\terminal.h": No such file or directory
main\main.c:   #include "..\include\terminal.h"
main\main.c:                                   ^
main\main.c: main\main.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling cdrvbxcan.c...
driver\cdrvbxcan.c(71): error:  #35: #error directive: 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:       #error 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:        ^
driver\cdrvbxcan.c: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
driver\target.c(102): error:  #70: incomplete type is not allowed
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:        ^
driver\target.c(102): error:  #65: expected a ";"
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:               ^
driver\target.c(314): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   } tGPIOSpeedDef;
driver\target.c:                  ^
driver\target.c(333): error:  #20: identifier "WORD" is undefined
driver\target.c:       WORD m_GPIO_Pin;
driver\target.c:       ^
driver\target.c(337): error:  #20: identifier "tGPIOSpeedDef" is undefined
driver\target.c:       tGPIOSpeedDef m_GPIO_Speed;
driver\target.c:       ^
driver\target.c(355): error:  #20: identifier "DWORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                     ^
driver\target.c(355): error:  #20: identifier "WORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                                       ^
driver\target.c(377): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitCanIsr (void)
driver\target.c:               ^
driver\target.c(399): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                                                  ^
driver\target.c(402): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:           ^
driver\target.c(402): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:                             ^
driver\target.c(403): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:           ^
driver\target.c(403): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:                             ^
driver\target.c(404): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:           ^
driver\target.c(404): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:                             ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                       ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                              ^
driver\target.c(405): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(405): error:  #147: declaration is incompatible with "void TgtGPIOInit(GPIO_TypeDef *, tGPIOInit *)" (declared at line 354)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(409): error:  #18: expected a ")"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #79: expected a type specifier
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #101: "RCC_TypeDef" has already been declared in the current scope
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #141-D: unnamed prototyped parameters not allowed when body is present
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #130: expected a "{"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:              ^
driver\target.c(449): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:       }
driver\target.c:       ^
driver\target.c(522): error:  #169: expected a declaration
driver\target.c:   }
driver\target.c:   ^
driver\target.c(823): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   static tTime NEAR TimerValue_g;
driver\target.c:                                 ^
driver\target.c(848): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitTimer (void)
driver\target.c:               ^
driver\target.c(1158): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:               currentpin = (GPIOInit_p->m_GPIO_Pin) & pos;
driver\target.c:                                                          ^
driver\target.c(1159): error:  #169: expected a declaration
driver\target.c:               if (currentpin == pos)
driver\target.c:               ^
driver\target.c(1186): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRL = tmpreg;
driver\target.c:                                ^
driver\target.c(1187): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1214): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:                       GPIOx_p->BRR = (((DWORD)0x01) << (pinpos + 0x08));
driver\target.c:                                                                        ^
driver\target.c(1215): error:  #169: expected a declaration
driver\target.c:                   }
driver\target.c:                   ^
driver\target.c(1224): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRH = tmpreg;
driver\target.c:                                ^
driver\target.c(1225): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1309): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           tmp1 = ((DWORD)0x03) << tmpmask;
driver\target.c:                                          ^
driver\target.c(1310): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           tmpreg &= ~tmp1;
driver\target.c:           ^
driver\target.c: driver\target.c: 9 warnings, 30 errors
compiling main.c...
main\main.c(60): error:  #20: identifier "terminal" is undefined
main\main.c:    terminal.initialize();
main\main.c:    ^
main\main.c(65): warning:  #223-D: function "sleep" declared implicitly
main\main.c:            sleep(20);
main\main.c:            ^
main\main.c: main\main.c: 1 warning, 1 error
Target not created
Build target 'demo'
compiling cdrvbxcan.c...
driver\cdrvbxcan.c(71): error:  #35: #error directive: 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:       #error 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:        ^
driver\cdrvbxcan.c: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
driver\target.c(102): error:  #70: incomplete type is not allowed
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:        ^
driver\target.c(102): error:  #65: expected a ";"
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:               ^
driver\target.c(314): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   } tGPIOSpeedDef;
driver\target.c:                  ^
driver\target.c(333): error:  #20: identifier "WORD" is undefined
driver\target.c:       WORD m_GPIO_Pin;
driver\target.c:       ^
driver\target.c(337): error:  #20: identifier "tGPIOSpeedDef" is undefined
driver\target.c:       tGPIOSpeedDef m_GPIO_Speed;
driver\target.c:       ^
driver\target.c(355): error:  #20: identifier "DWORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                     ^
driver\target.c(355): error:  #20: identifier "WORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                                       ^
driver\target.c(377): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitCanIsr (void)
driver\target.c:               ^
driver\target.c(399): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                                                  ^
driver\target.c(402): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:           ^
driver\target.c(402): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:                             ^
driver\target.c(403): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:           ^
driver\target.c(403): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:                             ^
driver\target.c(404): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:           ^
driver\target.c(404): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:                             ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                       ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                              ^
driver\target.c(405): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(405): error:  #147: declaration is incompatible with "void TgtGPIOInit(GPIO_TypeDef *, tGPIOInit *)" (declared at line 354)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(409): error:  #18: expected a ")"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #79: expected a type specifier
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #101: "RCC_TypeDef" has already been declared in the current scope
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #141-D: unnamed prototyped parameters not allowed when body is present
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #130: expected a "{"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:              ^
driver\target.c(449): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:       }
driver\target.c:       ^
driver\target.c(522): error:  #169: expected a declaration
driver\target.c:   }
driver\target.c:   ^
driver\target.c(823): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   static tTime NEAR TimerValue_g;
driver\target.c:                                 ^
driver\target.c(848): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitTimer (void)
driver\target.c:               ^
driver\target.c(1158): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:               currentpin = (GPIOInit_p->m_GPIO_Pin) & pos;
driver\target.c:                                                          ^
driver\target.c(1159): error:  #169: expected a declaration
driver\target.c:               if (currentpin == pos)
driver\target.c:               ^
driver\target.c(1186): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRL = tmpreg;
driver\target.c:                                ^
driver\target.c(1187): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1214): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:                       GPIOx_p->BRR = (((DWORD)0x01) << (pinpos + 0x08));
driver\target.c:                                                                        ^
driver\target.c(1215): error:  #169: expected a declaration
driver\target.c:                   }
driver\target.c:                   ^
driver\target.c(1224): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRH = tmpreg;
driver\target.c:                                ^
driver\target.c(1225): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1309): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           tmp1 = ((DWORD)0x03) << tmpmask;
driver\target.c:                                          ^
driver\target.c(1310): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           tmpreg &= ~tmp1;
driver\target.c:           ^
driver\target.c: driver\target.c: 9 warnings, 30 errors
compiling main.c...
main\main.c(60): error:  #20: identifier "terminal" is undefined
main\main.c:    terminal.initialize();
main\main.c:    ^
main\main.c: main\main.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling cdrvbxcan.c...
driver\cdrvbxcan.c(71): error:  #35: #error directive: 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:       #error 'This configuration is not supported. Set CDRV_USE_BASIC_CAN to TRUE.'
driver\cdrvbxcan.c:        ^
driver\cdrvbxcan.c: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
driver\target.c(102): error:  #70: incomplete type is not allowed
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:        ^
driver\target.c(102): error:  #65: expected a ";"
driver\target.c:   void PUBLIC SystemInit (void)
driver\target.c:               ^
driver\target.c(314): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   } tGPIOSpeedDef;
driver\target.c:                  ^
driver\target.c(333): error:  #20: identifier "WORD" is undefined
driver\target.c:       WORD m_GPIO_Pin;
driver\target.c:       ^
driver\target.c(337): error:  #20: identifier "tGPIOSpeedDef" is undefined
driver\target.c:       tGPIOSpeedDef m_GPIO_Speed;
driver\target.c:       ^
driver\target.c(355): error:  #20: identifier "DWORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                     ^
driver\target.c(355): error:  #20: identifier "WORD" is undefined
driver\target.c:   static void TgtGPIOPinRemapConfig(DWORD GPIO_Remap, WORD NewState);
driver\target.c:                                                       ^
driver\target.c(377): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitCanIsr (void)
driver\target.c:               ^
driver\target.c(399): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                                                  ^
driver\target.c(402): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:           ^
driver\target.c(402): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Pin = GPIO_PIN_1;
driver\target.c:                             ^
driver\target.c(403): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:           ^
driver\target.c(403): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Mode = GPIO_Mode_AF_PP;
driver\target.c:                             ^
driver\target.c(404): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:           ^
driver\target.c(404): error:  #65: expected a ";"
driver\target.c:           GPIO_InitStructure.m_GPIO_Speed = GPIO_Speed_50MHz;
driver\target.c:                             ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                       ^
driver\target.c(405): error:  #79: expected a type specifier
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:                              ^
driver\target.c(405): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(405): error:  #147: declaration is incompatible with "void TgtGPIOInit(GPIO_TypeDef *, tGPIOInit *)" (declared at line 354)
driver\target.c:           TgtGPIOInit(GPIOD, &GPIO_InitStructure);
driver\target.c:           ^
driver\target.c(409): error:  #18: expected a ")"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #79: expected a type specifier
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #260-D: explicit type is missing ("int" assumed)
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #101: "RCC_TypeDef" has already been declared in the current scope
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #141-D: unnamed prototyped parameters not allowed when body is present
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:           ^
driver\target.c(409): error:  #130: expected a "{"
driver\target.c:           RCC->APB1RSTR |= RCC_APB1RSTR_CAN1RST;  // set RESET state for CAN1
driver\target.c:              ^
driver\target.c(449): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:       }
driver\target.c:       ^
driver\target.c(522): error:  #169: expected a declaration
driver\target.c:   }
driver\target.c:   ^
driver\target.c(823): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:   static tTime NEAR TimerValue_g;
driver\target.c:                                 ^
driver\target.c(848): error:  #65: expected a ";"
driver\target.c:   void PUBLIC TgtInitTimer (void)
driver\target.c:               ^
driver\target.c(1158): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:               currentpin = (GPIOInit_p->m_GPIO_Pin) & pos;
driver\target.c:                                                          ^
driver\target.c(1159): error:  #169: expected a declaration
driver\target.c:               if (currentpin == pos)
driver\target.c:               ^
driver\target.c(1186): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRL = tmpreg;
driver\target.c:                                ^
driver\target.c(1187): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1214): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:                       GPIOx_p->BRR = (((DWORD)0x01) << (pinpos + 0x08));
driver\target.c:                                                                        ^
driver\target.c(1215): error:  #169: expected a declaration
driver\target.c:                   }
driver\target.c:                   ^
driver\target.c(1224): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           GPIOx_p->CRH = tmpreg;
driver\target.c:                                ^
driver\target.c(1225): error:  #169: expected a declaration
driver\target.c:       }
driver\target.c:       ^
driver\target.c(1309): warning:  #12-D: parsing restarts here after previous syntax error
driver\target.c:           tmp1 = ((DWORD)0x03) << tmpmask;
driver\target.c:                                          ^
driver\target.c(1310): error:  #77-D: this declaration has no storage class or type specifier
driver\target.c:           tmpreg &= ~tmp1;
driver\target.c:           ^
driver\target.c: driver\target.c: 9 warnings, 30 errors
compiling main.c...
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(295): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE                tMsgTyp;
.\include\cdrv.h:           ^
.\include\cdrv.h(305): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE tCdrvResetCode;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(324): error:  #20: identifier "BYTE" is undefined
error type>:       BYTE     m_bSize;
error type>:       ^
.\include\cdrv.h(325): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bChannel_p;  // channel for message (assigned from CAN driver)
.\include\cdrv.h:       ^
.\include\cdrv.h(326): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bData[8];
.\include\cdrv.h:       ^
.\include\cdrv.h(340): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:       WORD m_wPortAddr;   // PC Portadresse
.\include\cdrv.h:       ^
.\include\cdrv.h(341): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bIrq;        // PC IRQ
.\include\cdrv.h:       ^
.\include\cdrv.h(349): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bDeviceNr;
.\include\cdrv.h:       ^
.\include\cdrv.h(362): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:               BYTE m_bDevNumber;
.\include\cdrv.h:               ^
.\include\cdrv.h(363): error:  #20: identifier "pthread_mutex_t" is undefined
.\include\cdrv.h:               pthread_mutex_t*    m_pCcmMutex;
.\include\cdrv.h:               ^
.\include\cdrv.h(364): error:  #20: identifier "pthread_cond_t" is undefined
.\include\cdrv.h:               pthread_cond_t*     m_pRxCond;
.\include\cdrv.h:               ^
.\include\cdrv.h(436): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:       ^
.\include\cdrv.h(436): error:  #65: expected a ";"
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:                 ^
.\include\cdrv.h(439): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(440): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(447): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(450): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(451): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(458): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(461): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(462): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(466): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wRxBufferSize;   // number of entries in the RX buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(467): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wTxBufferSize;   // number of entries in the TX Buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(507): error:  #20: identifier "tWindowsParam" is undefined
.\include\cdrv.h:               tWindowsParam       m_WindowsIoParam;   // PC Windows and Wrapper.dll
.\include\cdrv.h:               ^
.\include\cdrv.h(533): error:  #20: identifier "DWORD" is undefined
.\include\cdrv.h:   typedef DWORD tCdrvLinFlags;
.\include\cdrv.h:           ^
.\include\cdrv.h(542): error:  #65: expected a ";"
.\include\cdrv.h:       tCdrvMsg MEM*   m_pBufferBase;  // base address of buffer
.\include\cdrv.h:                   ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(295): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE                tMsgTyp;
.\include\cdrv.h:           ^
.\include\cdrv.h(305): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE tCdrvResetCode;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(324): error:  #20: identifier "BYTE" is undefined
error type>:       BYTE     m_bSize;
error type>:       ^
.\include\cdrv.h(325): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bChannel_p;  // channel for message (assigned from CAN driver)
.\include\cdrv.h:       ^
.\include\cdrv.h(326): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bData[8];
.\include\cdrv.h:       ^
.\include\cdrv.h(340): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:       WORD m_wPortAddr;   // PC Portadresse
.\include\cdrv.h:       ^
.\include\cdrv.h(341): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bIrq;        // PC IRQ
.\include\cdrv.h:       ^
.\include\cdrv.h(349): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bDeviceNr;
.\include\cdrv.h:       ^
.\include\cdrv.h(362): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:               BYTE m_bDevNumber;
.\include\cdrv.h:               ^
.\include\cdrv.h(363): error:  #20: identifier "pthread_mutex_t" is undefined
.\include\cdrv.h:               pthread_mutex_t*    m_pCcmMutex;
.\include\cdrv.h:               ^
.\include\cdrv.h(364): error:  #20: identifier "pthread_cond_t" is undefined
.\include\cdrv.h:               pthread_cond_t*     m_pRxCond;
.\include\cdrv.h:               ^
.\include\cdrv.h(436): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:       ^
.\include\cdrv.h(436): error:  #65: expected a ";"
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:                 ^
.\include\cdrv.h(439): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(440): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(447): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(450): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(451): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(458): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(461): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(462): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(466): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wRxBufferSize;   // number of entries in the RX buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(467): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wTxBufferSize;   // number of entries in the TX Buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(507): error:  #20: identifier "tWindowsParam" is undefined
.\include\cdrv.h:               tWindowsParam       m_WindowsIoParam;   // PC Windows and Wrapper.dll
.\include\cdrv.h:               ^
.\include\cdrv.h(533): error:  #20: identifier "DWORD" is undefined
.\include\cdrv.h:   typedef DWORD tCdrvLinFlags;
.\include\cdrv.h:           ^
.\include\cdrv.h(542): error:  #65: expected a ";"
.\include\cdrv.h:       tCdrvMsg MEM*   m_pBufferBase;  // base address of buffer
.\include\cdrv.h:                   ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(295): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE                tMsgTyp;
.\include\cdrv.h:           ^
.\include\cdrv.h(305): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE tCdrvResetCode;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(324): error:  #20: identifier "BYTE" is undefined
error type>:       BYTE     m_bSize;
error type>:       ^
.\include\cdrv.h(325): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bChannel_p;  // channel for message (assigned from CAN driver)
.\include\cdrv.h:       ^
.\include\cdrv.h(326): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bData[8];
.\include\cdrv.h:       ^
.\include\cdrv.h(340): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:       WORD m_wPortAddr;   // PC Portadresse
.\include\cdrv.h:       ^
.\include\cdrv.h(341): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bIrq;        // PC IRQ
.\include\cdrv.h:       ^
.\include\cdrv.h(349): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bDeviceNr;
.\include\cdrv.h:       ^
.\include\cdrv.h(362): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:               BYTE m_bDevNumber;
.\include\cdrv.h:               ^
.\include\cdrv.h(363): error:  #20: identifier "pthread_mutex_t" is undefined
.\include\cdrv.h:               pthread_mutex_t*    m_pCcmMutex;
.\include\cdrv.h:               ^
.\include\cdrv.h(364): error:  #20: identifier "pthread_cond_t" is undefined
.\include\cdrv.h:               pthread_cond_t*     m_pRxCond;
.\include\cdrv.h:               ^
.\include\cdrv.h(436): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:       ^
.\include\cdrv.h(436): error:  #65: expected a ";"
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:                 ^
.\include\cdrv.h(439): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(440): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(447): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(450): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(451): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(458): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(461): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(462): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(466): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wRxBufferSize;   // number of entries in the RX buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(467): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wTxBufferSize;   // number of entries in the TX Buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(507): error:  #20: identifier "tWindowsParam" is undefined
.\include\cdrv.h:               tWindowsParam       m_WindowsIoParam;   // PC Windows and Wrapper.dll
.\include\cdrv.h:               ^
.\include\cdrv.h(533): error:  #20: identifier "DWORD" is undefined
.\include\cdrv.h:   typedef DWORD tCdrvLinFlags;
.\include\cdrv.h:           ^
.\include\cdrv.h(542): error:  #65: expected a ";"
.\include\cdrv.h:       tCdrvMsg MEM*   m_pBufferBase;  // base address of buffer
.\include\cdrv.h:                   ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(295): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE                tMsgTyp;
.\include\cdrv.h:           ^
.\include\cdrv.h(305): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:   typedef BYTE tCdrvResetCode;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(324): error:  #20: identifier "BYTE" is undefined
error type>:       BYTE     m_bSize;
error type>:       ^
.\include\cdrv.h(325): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bChannel_p;  // channel for message (assigned from CAN driver)
.\include\cdrv.h:       ^
.\include\cdrv.h(326): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE     m_bData[8];
.\include\cdrv.h:       ^
.\include\cdrv.h(340): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:       WORD m_wPortAddr;   // PC Portadresse
.\include\cdrv.h:       ^
.\include\cdrv.h(341): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bIrq;        // PC IRQ
.\include\cdrv.h:       ^
.\include\cdrv.h(349): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE m_bDeviceNr;
.\include\cdrv.h:       ^
.\include\cdrv.h(362): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:               BYTE m_bDevNumber;
.\include\cdrv.h:               ^
.\include\cdrv.h(363): error:  #20: identifier "pthread_mutex_t" is undefined
.\include\cdrv.h:               pthread_mutex_t*    m_pCcmMutex;
.\include\cdrv.h:               ^
.\include\cdrv.h(364): error:  #20: identifier "pthread_cond_t" is undefined
.\include\cdrv.h:               pthread_cond_t*     m_pRxCond;
.\include\cdrv.h:               ^
.\include\cdrv.h(436): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:       ^
.\include\cdrv.h(436): error:  #65: expected a ";"
.\include\cdrv.h:       BYTE HWACC*     m_pbBaseAddr;   // base address of CAN controller
.\include\cdrv.h:                 ^
.\include\cdrv.h(439): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(440): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(447): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(450): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(451): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(458): error:  #20: identifier "BYTE" is undefined
.\include\cdrv.h:       BYTE            m_bCanNo;
.\include\cdrv.h:       ^
.\include\cdrv.h(461): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t    m_bTaskId;      // task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(462): error:  #20: identifier "PxTask_t" is undefined
.\include\cdrv.h:           PxTask_t*   m_pbTaskId;     // pointer task-ID of application task
.\include\cdrv.h:           ^
.\include\cdrv.h(466): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wRxBufferSize;   // number of entries in the RX buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(467): error:  #20: identifier "WORD" is undefined
.\include\cdrv.h:           WORD m_wTxBufferSize;   // number of entries in the TX Buffer of CAN device driver
.\include\cdrv.h:           ^
.\include\cdrv.h(507): error:  #20: identifier "tWindowsParam" is undefined
.\include\cdrv.h:               tWindowsParam       m_WindowsIoParam;   // PC Windows and Wrapper.dll
.\include\cdrv.h:               ^
.\include\cdrv.h(533): error:  #20: identifier "DWORD" is undefined
.\include\cdrv.h:   typedef DWORD tCdrvLinFlags;
.\include\cdrv.h:           ^
.\include\cdrv.h(542): error:  #65: expected a ";"
.\include\cdrv.h:       tCdrvMsg MEM*   m_pBufferBase;  // base address of buffer
.\include\cdrv.h:                   ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(543): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_MaxEntries;   // count of enties in this buffer
.\include\cdrv.h:       ^
.\include\cdrv.h(554): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_ReadIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(555): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_WriteIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(556): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_Count;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(657): error:  #20: identifier "tCanId" is undefined
error type>:       tCanId          m_CanId;
error type>:       ^
.\include\cdrv.h(665): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(674): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(543): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_MaxEntries;   // count of enties in this buffer
.\include\cdrv.h:       ^
.\include\cdrv.h(554): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_ReadIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(555): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_WriteIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(556): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_Count;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(657): error:  #20: identifier "tCanId" is undefined
error type>:       tCanId          m_CanId;
error type>:       ^
.\include\cdrv.h(665): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(674): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(543): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_MaxEntries;   // count of enties in this buffer
.\include\cdrv.h:       ^
.\include\cdrv.h(554): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_ReadIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(555): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_WriteIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(556): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_Count;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(657): error:  #20: identifier "tCanId" is undefined
error type>:       tCanId          m_CanId;
error type>:       ^
.\include\cdrv.h(665): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(674): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(245): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvIsrType;
.\include\cdrv.h:           ^
.\include\cdrv.h(256): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tCdrvBaudIndex;
.\include\cdrv.h:           ^
.\include\cdrv.h(272): error:  #20: identifier "tFastByte" is undefined
.\include\cdrv.h:   typedef tFastByte           tMsgTypBit;
.\include\cdrv.h:           ^
.\include\cdrv.h(322): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId   m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(543): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_MaxEntries;   // count of enties in this buffer
.\include\cdrv.h:       ^
.\include\cdrv.h(554): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_ReadIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(555): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_WriteIndex;
.\include\cdrv.h:       ^
.\include\cdrv.h(556): error:  #20: identifier "tCdrvBuffIndex" is undefined
.\include\cdrv.h:       tCdrvBuffIndex  m_Count;
.\include\cdrv.h:       ^
.\include\cdrv.h: KB: Unexpected type: 0
error type>(657): error:  #20: identifier "tCanId" is undefined
error type>:       tCanId          m_CanId;
error type>:       ^
.\include\cdrv.h(665): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(674): error:  #20: identifier "tCanId" is undefined
.\include\cdrv.h:       tCanId          m_CanId;
.\include\cdrv.h:       ^
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
assembling startup_stm32f10x_hd.s...
compiling rcc.c...
compiling usart.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(680): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #20: identifier "MCO_DECL_PTR_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(681): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                                        ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #92: identifier-list parameters may only be used in a function definition
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(683): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                                                                        ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(685): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                                                                                 ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(686): error:  #84: invalid combination of type specifiers
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                                                                  ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(687): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(688): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(689): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #20: identifier "MCO_DECL_INSTANCE_PTR_" is undefined
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                           ^
.\include\cdrv.h(690): error:  #18: expected a ")"
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                                                                              ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
assembling startup_stm32f10x_hd.s...
compiling rcc.c...
compiling usart.c...
.\include\instdef.h(39): error:  #35: #error directive: "ERROR: invalid value for COP_MAX_INSTANCES / CDRV_MAX_INSTANCES!"
.\include\instdef.h: ERROR: invalid value for COP_MAX_INSTANCES / CDRV_MAX_INSTANCES!"
.\include\instdef.h:        ^
.\include\instdef.h: driver\usart.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                      ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(691): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReleaseMsg)       (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(692): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUpdateMsg)        (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(693): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInterruptHandler) (MCO_DECL_INSTANCE_PTR_ tCdrvIsrType IsrType_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(694): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetStatus)        (MCO_DECL_INSTANCE_PTR_ tCdrvStatus MEM* pStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(695): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvResetStatus)      (MCO_DECL_INSTANCE_PTR_ tCdrvStatus ResetStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(696): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetDiagnostic)    (MCO_DECL_INSTANCE_PTR_ tCdrvDiagnostic MEM* pDiagnostic_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(707): error:  #20: identifier "tCdrvInit" is undefined
.\include\cdrv.h:       tCdrvInit               m_fpInit;               // used
.\include\cdrv.h:       ^
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                      ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(691): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReleaseMsg)       (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(692): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUpdateMsg)        (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(693): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInterruptHandler) (MCO_DECL_INSTANCE_PTR_ tCdrvIsrType IsrType_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(694): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetStatus)        (MCO_DECL_INSTANCE_PTR_ tCdrvStatus MEM* pStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(695): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvResetStatus)      (MCO_DECL_INSTANCE_PTR_ tCdrvStatus ResetStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(696): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetDiagnostic)    (MCO_DECL_INSTANCE_PTR_ tCdrvDiagnostic MEM* pDiagnostic_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(707): error:  #20: identifier "tCdrvInit" is undefined
.\include\cdrv.h:       tCdrvInit               m_fpInit;               // used
.\include\cdrv.h:       ^
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                      ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(691): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReleaseMsg)       (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(692): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUpdateMsg)        (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(693): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInterruptHandler) (MCO_DECL_INSTANCE_PTR_ tCdrvIsrType IsrType_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(694): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetStatus)        (MCO_DECL_INSTANCE_PTR_ tCdrvStatus MEM* pStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(695): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvResetStatus)      (MCO_DECL_INSTANCE_PTR_ tCdrvStatus ResetStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(696): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetDiagnostic)    (MCO_DECL_INSTANCE_PTR_ tCdrvDiagnostic MEM* pDiagnostic_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(707): error:  #20: identifier "tCdrvInit" is undefined
.\include\cdrv.h:       tCdrvInit               m_fpInit;               // used
.\include\cdrv.h:       ^
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(680): error:  #79: expected a type specifier
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                  ^
.\include\cdrv.h(680): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInit)             (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                                                                      ^
.\include\cdrv.h(681): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvAddInstance)      (MCO_DECL_PTR_INSTANCE_PTR_ tCdrvInitParam MEM* pInitParam_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(682): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDeleteInstance)   (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(683): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvSetBaudrate)      (MCO_DECL_INSTANCE_PTR_ CONST void ROM* pBdiTable_p, WORD wSizeOfBdiTab_p, BYTE bBdiIndex_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(685): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReset)            (MCO_DECL_INSTANCE_PTR_ tCdrvResetCode ResetCode_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(686): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvClearRtr)         (MCO_DECL_INSTANCE_PTR_ BYTE bChannel_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(687): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvDefineCanId)      (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(688): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUndefineCanId)    (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(689): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvWriteMsg)         (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(690): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReadMsg)          (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* MEM* ppCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(691): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvReleaseMsg)       (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(692): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvUpdateMsg)        (MCO_DECL_INSTANCE_PTR_ tCdrvMsg MEM* pCanMsg_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(693): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvInterruptHandler) (MCO_DECL_INSTANCE_PTR_ tCdrvIsrType IsrType_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(694): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetStatus)        (MCO_DECL_INSTANCE_PTR_ tCdrvStatus MEM* pStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(695): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvResetStatus)      (MCO_DECL_INSTANCE_PTR_ tCdrvStatus ResetStatus_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(696): error:  #90: function returning function is not allowed
.\include\cdrv.h:   typedef tCopKernel (PUBLIC ROM *tCdrvGetDiagnostic)    (MCO_DECL_INSTANCE_PTR_ tCdrvDiagnostic MEM* pDiagnostic_p);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(707): error:  #20: identifier "tCdrvInit" is undefined
.\include\cdrv.h:       tCdrvInit               m_fpInit;               // used
.\include\cdrv.h:       ^
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(830): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(846): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(846): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(862): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(862): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(878): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(878): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(894): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(894): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(910): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(910): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(926): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(926): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(942): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(942): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(958): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(958): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(974): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvResetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 30 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(830): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(846): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(846): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(862): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(862): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(878): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(878): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(894): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(894): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(910): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(910): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(926): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(926): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(942): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(942): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(958): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(958): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(974): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvResetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 30 errors
compiling target.c...
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(830): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(846): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(846): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(862): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(862): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(878): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(878): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(894): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(894): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(910): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(910): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(926): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(926): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(942): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(942): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(958): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(958): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(974): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvResetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: driver\target.c: 0 warnings, 30 errors
compiling main.c...
.\include\cdrv.h(748): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(748): error:  #101: "tCopKernel" has already been declared in the current scope
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                 ^
.\include\cdrv.h(748): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInit (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(764): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(764): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvAddInstance (MCO_DECL_PTR_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(780): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:   ^
.\include\cdrv.h(780): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDeleteInstance (MCO_DECL_INSTANCE_PTR);
.\include\cdrv.h:                                   ^
.\include\cdrv.h(797): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(797): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvSetBaudrate (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(814): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(814): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReset (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(830): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(830): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvClearRtr (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(846): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(846): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvDefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(862): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(862): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUndefineCanId (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(878): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(878): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvWriteMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(894): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(894): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReadMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(910): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(910): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvReleaseMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(926): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(926): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvUpdateMsg (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(942): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(942): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvInterruptHandler (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(958): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h(958): error:  #65: expected a ";"
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvGetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:                                   ^
.\include\cdrv.h(974): error:  #20: identifier "CDRVDLLEXPORT" is undefined
.\include\cdrv.h:   CDRVDLLEXPORT tCopKernel PUBLIC CdrvResetStatus (MCO_DECL_INSTANCE_PTR_
.\include\cdrv.h:   ^
.\include\cdrv.h: main\main.c: 0 warnings, 30 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrvbxcan.h(187): error:  #101: "sFilterRegister" has already been declared in the current scope
.\include\cdrvbxcan.h:       tFilterReg sFilterRegister[28];
.\include\cdrvbxcan.h:                  ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\usart.c: 0 warnings, 5 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrvbxcan.h(187): error:  #101: "sFilterRegister" has already been declared in the current scope
.\include\cdrvbxcan.h:       tFilterReg sFilterRegister[28];
.\include\cdrvbxcan.h:                  ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\cdrvbxcan.c: 0 warnings, 5 errors
compiling target.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrvbxcan.h(187): error:  #101: "sFilterRegister" has already been declared in the current scope
.\include\cdrvbxcan.h:       tFilterReg sFilterRegister[28];
.\include\cdrvbxcan.h:                  ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\target.c: 0 warnings, 5 errors
compiling main.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrvbxcan.h(187): error:  #101: "sFilterRegister" has already been declared in the current scope
.\include\cdrvbxcan.h:       tFilterReg sFilterRegister[28];
.\include\cdrvbxcan.h:                  ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: main\main.c: 0 warnings, 5 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\usart.c: 0 warnings, 4 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\cdrvbxcan.c: 0 warnings, 4 errors
compiling target.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: driver\target.c: 0 warnings, 4 errors
compiling main.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\target.h(1203): error:  #5: cannot open source input file "tgtos.h": No such file or directory
.\include\target.h:   #include "tgtos.h"
.\include\target.h:                     ^
.\include\target.h: main\main.c: 0 warnings, 4 errors
Target not created
Build target 'demo'
compiling usart.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrv.h: driver\usart.c: 0 warnings, 3 errors
compiling cdrvbxcan.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrv.h: driver\cdrvbxcan.c: 0 warnings, 3 errors
compiling target.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
driver\target.c(418): warning:  #223-D: function "NVIC_EncodePriority" declared implicitly
driver\target.c:           bPriority = NVIC_EncodePriority(NVIC_GetPriorityGrouping(), CAN1_RX0_PRIORITY, 0);
driver\target.c:                       ^
driver\target.c(418): warning:  #223-D: function "NVIC_GetPriorityGrouping" declared implicitly
driver\target.c:           bPriority = NVIC_EncodePriority(NVIC_GetPriorityGrouping(), CAN1_RX0_PRIORITY, 0);
driver\target.c:                                           ^
driver\target.c(1292): error:  #136: struct "<unnamed>" has no field "MAPR2"
driver\target.c:           tmpreg = AFIO->MAPR2;
driver\target.c:                          ^
driver\target.c(1326): error:  #136: struct "<unnamed>" has no field "MAPR2"
driver\target.c:           AFIO->MAPR2 = tmpreg;
driver\target.c:                 ^
driver\target.c: driver\target.c: 2 warnings, 5 errors
compiling main.c...
.\include\cdrv.h(1059): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_CDRVERROR) == CDRV_DBGLVL_CDRVERROR)
.\include\cdrv.h:         ^
.\include\cdrv.h(1075): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRV) == CDRV_DBGLVL_KERNCDRV)
.\include\cdrv.h:         ^
.\include\cdrv.h(1091): error:  #59: function call is not allowed in a constant expression
.\include\cdrv.h:   #if ((DEBUG_GLB_LVL() & CDRV_DBGLVL_KERNCDRVERR) == CDRV_DBGLVL_KERNCDRVERR)
.\include\cdrv.h:         ^
.\include\cdrv.h: main\main.c: 0 warnings, 3 errors
Target not created
Build target 'demo'
compiling usart.c...
driver\..\include\..\config\config.h(34): error:  #13: expected a file name
driver\..\include\..\config\config.h:   #include __DEBUG_H__
driver\..\include\..\config\config.h:            ^
driver\..\include\..\config\config.h: driver\usart.c: 0 warnings, 1 error
compiling cdrvbxcan.c...
.\config\config.h(34): error:  #13: expected a file name
.\config\config.h:   #include __DEBUG_H__
.\config\config.h:            ^
.\config\config.h: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
.\config\config.h(34): error:  #13: expected a file name
.\config\config.h:   #include __DEBUG_H__
.\config\config.h:            ^
.\config\config.h: driver\target.c: 0 warnings, 1 error
compiling main.c...
main\..\include\..\config\config.h(34): error:  #13: expected a file name
main\..\include\..\config\config.h:   #include __DEBUG_H__
main\..\include\..\config\config.h:            ^
main\..\include\..\config\config.h: main\main.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling usart.c...
driver\..\include\..\config\config.h(34): error:  #13: expected a file name
driver\..\include\..\config\config.h:   #include __DEBUG_HEAD_H__
driver\..\include\..\config\config.h:            ^
driver\..\include\..\config\config.h: driver\usart.c: 0 warnings, 1 error
compiling cdrvbxcan.c...
.\config\config.h(34): error:  #13: expected a file name
.\config\config.h:   #include __DEBUG_HEAD_H__
.\config\config.h:            ^
.\config\config.h: driver\cdrvbxcan.c: 0 warnings, 1 error
compiling target.c...
.\config\config.h(34): error:  #13: expected a file name
.\config\config.h:   #include __DEBUG_HEAD_H__
.\config\config.h:            ^
.\config\config.h: driver\target.c: 0 warnings, 1 error
compiling main.c...
main\..\include\..\config\config.h(34): error:  #13: expected a file name
main\..\include\..\config\config.h:   #include __DEBUG_HEAD_H__
main\..\include\..\config\config.h:            ^
main\..\include\..\config\config.h: main\main.c: 0 warnings, 1 error
Target not created
Build target 'demo'
compiling usart.c...
compiling cdrvbxcan.c...
compiling target.c...
driver\target.c(418): warning:  #223-D: function "NVIC_EncodePriority" declared implicitly
driver\target.c:           bPriority = NVIC_EncodePriority(NVIC_GetPriorityGrouping(), CAN1_RX0_PRIORITY, 0);
driver\target.c:                       ^
driver\target.c(418): warning:  #223-D: function "NVIC_GetPriorityGrouping" declared implicitly
driver\target.c:           bPriority = NVIC_EncodePriority(NVIC_GetPriorityGrouping(), CAN1_RX0_PRIORITY, 0);
driver\target.c:                                           ^
driver\target.c(1292): error:  #136: struct "<unnamed>" has no field "MAPR2"
driver\target.c:           tmpreg = AFIO->MAPR2;
driver\target.c:                          ^
driver\target.c(1326): error:  #136: struct "<unnamed>" has no field "MAPR2"
driver\target.c:           AFIO->MAPR2 = tmpreg;
driver\target.c:                 ^
driver\target.c: driver\target.c: 2 warnings, 2 errors
compiling main.c...
Target not created
